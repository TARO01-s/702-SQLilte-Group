--Cleaning AirPollution Table
CREATE TABLE AirPollution_clean AS
SELECT 
    [Data Source] AS Country,
    [World Development Indicators] AS Country_Code,
    '2018' AS Year,
    field63 AS Pollution
FROM AirPollution
WHERE field63 IS NOT NULL

UNION ALL
SELECT 
    [Data Source],
    [World Development Indicators],
    '2019',
    field64
FROM AirPollution
WHERE field64 IS NOT NULL

UNION ALL
SELECT 
    [Data Source],
    [World Development Indicators],
    '2020',
    field65
FROM AirPollution
WHERE field65 IS NOT NULL;
--Delete the unecessary row from the new cleaned data
DELETE FROM AirPollution_clean
WHERE Pollution = '2018';

DELETE FROM AirPollution_clean
WHERE Country LIKE 'World%'
   OR Country LIKE 'Africa Eastern and Southern%'
   OR Country LIKE 'Africa Western and Central%'
   OR Country LIKE 'Central Europe and the Baltics%'
   OR Country LIKE 'Country Name%'
   OR Country LIKE 'Sub-Saharan%'
   OR Country LIKE 'Europe & Central Asia (excluding high income)%'
   OR Country LIKE 'Europe & Central Asia (IDA & IBRD countries)%'
   OR Country LIKE 'Europe & Central Asia%'
   OR Country LIKE 'East Asia & Pacific%'
   OR Country LIKE 'East Asia & Pacific (IDA & IBRD countries)%'
   OR Country LIKE 'Euro area%'
   OR Country LIKE 'European Union%'
   OR Country LIKE 'Fragile and conflict affected situations%'
   OR Country LIKE 'Heavily indebted poor countries (HIPC)%'
   OR Country LIKE 'High income%'
   OR Country LIKE 'IBRD only%'
   OR Country LIKE 'EIDA & IBRD total%'
   OR Country LIKE 'EIDA blend%'
   OR Country LIKE 'IDA only%'
   OR Country LIKE 'IDA total%'
   OR Country LIKE 'Late-demographic dividend%'
   OR Country LIKE 'Latin America & Caribbean%'
   OR Country LIKE 'Latin America & Caribbean (excluding high income)%'
   OR Country LIKE 'Least developed countries%'
   OR Country LIKE 'Low & middle income%'
   OR Country LIKE 'Lower middle income%'
   OR Country LIKE 'Middle East, North Africa, Afghanistan & Pakistan%'
   OR Country LIKE 'Middle East, North Africa, Afghanistan & Pakistan (IDA & IBRD)%'
   OR Country LIKE 'Middle East, North Africa, Afghanistan & Pakistan (excluding high income)%'
   OR Country LIKE 'OECD members%'
   OR Country LIKE 'Other small states%'
   OR Country LIKE 'Pacific island small states%'
   OR Country LIKE 'Post-demographic dividend%'
   OR Country LIKE 'Pre-demographic dividend%'
   OR Country LIKE 'South Asia (IDA & IBRD)%'
   OR Country LIKE 'Sub-Saharan Africa (IDA & IBRD countries)%'
   OR Country LIKE 'Sub-Saharan Africa (excluding high income)%'
   OR Country IN (
       'Arab World',
       'Caribbean small states',
       'Early-demographic dividend',
       'IDA & IBRD total',
       'IDA blend',
       'Latin America & the Caribbean (IDA & IBRD countries)',
       'Low income',
       'Middle income',
       'North America',
       'Small states',
       'South Asia',
       'Upper middle income'
   );
   
   UPDATE AirPollution_clean
SET Country = CASE Country
  WHEN 'Côte d''Ivoire'                    THEN 'Cote d''Ivoire'
  WHEN 'Democratic Republic of the Congo'  THEN 'Democratic Republic of Congo'
  WHEN 'Republic of the Congo'             THEN 'Congo'
  WHEN 'Brunei Darussalam'                 THEN 'Brunei'
  WHEN 'Cabo Verde'                        THEN 'Cape Verde'
  WHEN 'Slovak Republic'                   THEN 'Slovakia'
  WHEN 'Timor-Leste'                       THEN 'East Timor'
  WHEN 'Micronesia'                        THEN 'Micronesia (country)'
  WHEN 'Puerto Rico (US)'                  THEN 'Puerto Rico'
  WHEN 'Virgin Islands (U.S.)'             THEN 'United States Virgin Islands'
  WHEN 'West Bank and Gaza'                THEN 'Palestine'
  ELSE Country
END
WHERE Country IN (
  'Côte d''Ivoire','Democratic Republic of the Congo','Republic of the Congo',
  'Brunei Darussalam','Cabo Verde','Slovak Republic','Timor-Leste','Micronesia',
  'Puerto Rico (US)','Virgin Islands (U.S.)','West Bank and Gaza'
);

  
  UPDATE AirPollution_clean
SET Country = CASE Country
    WHEN 'Bahamas, The'                  THEN 'Bahamas'
    WHEN 'Gambia, The'                   THEN 'Gambia'
    WHEN 'Congo, Dem. Rep.'              THEN 'Democratic Republic of the Congo'
    WHEN 'Congo, Rep.'                   THEN 'Republic of the Congo'
    WHEN 'Egypt, Arab Rep.'              THEN 'Egypt'
    WHEN 'Iran, Islamic Rep.'            THEN 'Iran'
    WHEN 'Korea, Dem. People''s Rep.'    THEN 'North Korea'
    WHEN 'Korea, Rep.'                   THEN 'South Korea'
    WHEN 'Kyrgyz Republic'               THEN 'Kyrgyzstan'
    WHEN 'Lao PDR'                       THEN 'Laos'
    WHEN 'Micronesia, Fed. Sts.'         THEN 'Micronesia'
    WHEN 'Russian Federation'            THEN 'Russia'
    WHEN 'Syrian Arab Republic'          THEN 'Syria'
    WHEN 'Turkiye'                       THEN 'Turkey'           -- note: D3 uses “Turkiye”; D2 uses “Turkey”
    WHEN 'Venezuela, RB'                 THEN 'Venezuela'
    WHEN 'Viet Nam'                      THEN 'Vietnam'
    WHEN 'Yemen, Rep.'                   THEN 'Yemen'
    WHEN 'Cote d''Ivoire'                THEN 'Côte d''Ivoire'   -- D2 often uses unaccented; D3 uses accented
    WHEN 'St. Kitts and Nevis'           THEN 'Saint Kitts and Nevis'
    WHEN 'St. Lucia'                     THEN 'Saint Lucia'
    WHEN 'St. Vincent and the Grenadines'THEN 'Saint Vincent and the Grenadines'
END
WHERE Country IN (
    'Bahamas, The','Gambia, The','Congo, Dem. Rep.','Congo, Rep.','Egypt, Arab Rep.',
    'Iran, Islamic Rep.','Korea, Dem. People''s Rep.','Korea, Rep.','Kyrgyz Republic',
    'Lao PDR','Micronesia, Fed. Sts.','Russian Federation','Syrian Arab Republic',
    'Turkiye','Venezuela, RB','Viet Nam','Yemen, Rep.','Cote d''Ivoire',
    'St. Kitts and Nevis','St. Lucia','St. Vincent and the Grenadines'
);

COMMIT;



--Cleaning the Human Development Index - Full table
CREATE TABLE HDI_clean AS
-- 2018
SELECT 
    Country,
    '2018' AS Year,
    [Human Development Index (2018)] AS HDI,
    [Gross National Income Per Capita (2018)] AS GNI_percapital,
    [Life Expectancy at Birth (2018)] AS LifeExp,
    [Mean Years of Schooling (2018)] AS Schooling,
    [HDI female (2018)] AS HDI_female,
    [Gross National Income Per Capita, female (2018)] AS GNI_female,
    [HDI male (2018)] AS HDI_male,
    [Gross National Income Per Capita, male (2018)] AS GNI_male,
    [Human Development Groups] AS HDI_Group,
    [UNDP Developing Regions] AS Developing_Region
FROM "Human Development Index - Full"

UNION ALL
-- 2019
SELECT 
    Country,
    '2019',
    [Human Development Index (2019)],
    [Gross National Income Per Capita (2019)],
    [Life Expectancy at Birth (2019)],
    [Mean Years of Schooling (2019)],
    [HDI female (2019)],
    [Gross National Income Per Capita, female (2019)],
    [HDI male (2019)],
    [Gross National Income Per Capita, male (2019)],
    [Human Development Groups],
    [UNDP Developing Regions]
FROM "Human Development Index - Full"

UNION ALL
-- 2020
SELECT 
    Country,
    '2020',
    [Human Development Index (2020)],
    [Gross National Income Per Capita (2020)],
    [Life Expectancy at Birth (2020)],
    [Mean Years of Schooling (2020)],
    [HDI female (2020)],
    [Gross National Income Per Capita, female (2020)],
    [HDI male (2020)],
    [Gross National Income Per Capita, male (2020)],
    [Human Development Groups],
    [UNDP Developing Regions]
FROM "Human Development Index - Full"

UNION ALL
-- 2021
SELECT 
    Country,
    '2021',
    [Human Development Index (2021)],
    [Gross National Income Per Capita (2021)],
    [Life Expectancy at Birth (2021)],
    [Mean Years of Schooling (2021)],
    [HDI female (2021)],
    [Gross National Income Per Capita, female (2021)],
    [HDI male (2021)],
    [Gross National Income Per Capita, male (2021)],
    [Human Development Groups],
    [UNDP Developing Regions]
FROM "Human Development Index - Full";

 --Check unique values of countries 
  SELECT DISTINCT Country FROM HDI_clean ORDER BY Country;
--Standardize the names
UPDATE HDI_clean
SET Country = 'Côte d''Ivoire'
WHERE Country = 'Ivory Coast';

UPDATE HDI_clean
SET Country = 'Lao PDR'
WHERE Country = 'Lao';

UPDATE HDI_clean
SET Country = 'Congo, Dem. Rep.'
WHERE Country = 'The Democratic Republic of the Congo';

UPDATE HDI_clean
SET Country = 'Congo, Rep.'
WHERE Country = 'Congo';

UPDATE HDI_clean
SET Country = 'Korea, Rep.'
WHERE Country = 'South Korea';

UPDATE HDI_clean
SET Country = 'Korea, Dem. People''s Rep.'
WHERE Country = 'North Korea';

UPDATE HDI_clean
SET Country = 'Palestine'
WHERE Country = 'Palestine, State of';

UPDATE HDI_clean
SET Country = 'Russia'
WHERE Country = 'Russian Federation';

UPDATE HDI_clean
SET Country = 'Syria'
WHERE Country = 'Syrian Arab Republic';

UPDATE HDI_clean
SET Country = 'Turkiye'
WHERE Country = 'Turkey';

UPDATE HDI_clean
SET Country = 'Vietnam'
WHERE Country = 'Viet Nam';
UPDATE HDI_clean
SET Country = CASE Country
    WHEN 'Congo, Dem. Rep.'          THEN 'Democratic Republic of Congo'
    WHEN 'Congo, Rep.'               THEN 'Congo'
    WHEN 'Côte d''Ivoire'            THEN 'Cote d''Ivoire'
    WHEN 'Lao PDR'                   THEN 'Laos'
    WHEN 'Korea, Dem. People''s Rep.' THEN 'North Korea'
    WHEN 'Korea, Rep.'               THEN 'South Korea'
    WHEN 'Micronesia'                THEN 'Micronesia (country)'
    WHEN 'Timor-Leste'               THEN 'East Timor'
    WHEN 'Turkiye'                   THEN 'Turkey'
    ELSE Country
END
WHERE Country IN ('Congo, Dem. Rep.','Congo, Rep.','Côte d''Ivoire','Lao PDR',
                  'Korea, Dem. People''s Rep.','Korea, Rep.','Micronesia',
                  'Timor-Leste','Turkiye');

--Cleaning CovidDeaths table
DROP TABLE IF EXISTS CovidDeaths_clean;
CREATE TABLE CovidDeaths_clean AS
SELECT 
    Entity AS Country,
    strftime('%Y', Day) AS Year,
    MAX([Cumulative excess deaths per 100,000 people (central estimate)]) AS ExcessDeaths_CentralEstmate,
    MAX([Cumulative excess deaths per 100,000 people (95% CI, lower bound)]) AS ExcessDeaths_Lower,
    MAX([Cumulative excess deaths per 100,000 people (95% CI, upper bound)]) AS ExcessDeaths_Upper,
    MAX([Total confirmed deaths due to COVID-19 per 100,000 people]) AS ConfirmedDeaths
FROM CovidDeaths
GROUP BY Entity, strftime('%Y', Day);


DELETE FROM CovidDeaths_clean
WHERE Country LIKE 'World%'
   OR Country LIKE 'Asia%'
   OR Country LIKE 'Asia excl. China%'
   OR Country LIKE 'High-income countries%'
   OR Country LIKE 'Low-income countries%'
   OR Country LIKE 'Lower-middle-income countries%'
   OR Country LIKE 'Upper-middle-income countries%'
   OR Country LIKE 'Oceania%'
   OR Country LIKE 'North America%'
   OR Country IN ('Africa','Europe','South America');

--Check unique values of countries
   SELECT DISTINCT Country FROM CovidDeaths_clean ORDER BY Country;
   SELECT DISTINCT Country FROM AirPollution_clean ORDER BY Country;
  SELECT DISTINCT Country FROM HDI_clean ORDER BY Country;
  
  
PRAGMA foreign_keys = ON;

/* =========================================================
   0) 清理旧对象（不动你的原始两张表）
   ========================================================= */
DROP VIEW IF EXISTS hdi_norm;
DROP VIEW IF EXISTS pm_norm;

DROP VIEW IF EXISTS pm25_pre;
DROP VIEW IF EXISTS hdi_pre;
DROP VIEW IF EXISTS pm25_2020;
DROP VIEW IF EXISTS hdi_2020;

DROP VIEW IF EXISTS country_meta_any;
DROP VIEW IF EXISTS country_master;

DROP VIEW IF EXISTS rq1_country_changes;
DROP VIEW IF EXISTS rq1_region_summary;
DROP VIEW IF EXISTS rq1_hdigroup_summary;
DROP VIEW IF EXISTS rq1_top_improve_pm25;
DROP VIEW IF EXISTS rq1_top_decline_pm25;
DROP VIEW IF EXISTS rq1_top_improve_hdi;
DROP VIEW IF EXISTS rq1_top_decline_hdi;

/* =========================================================
   1) 规范化基础视图（名字去空格大写；年份转整数；去重）
   ========================================================= */
CREATE VIEW hdi_norm AS
SELECT DISTINCT
  UPPER(TRIM(Country))      AS cname_norm,
  TRIM(Country)             AS CountryName,
  CAST(Year AS INTEGER)     AS Year,
  HDI,
  HDI_Group,
  Developing_Region
FROM HDI_clean
WHERE TRIM(Country) <> '' AND Year IS NOT NULL;

CREATE VIEW pm_norm AS
SELECT DISTINCT
  UPPER(TRIM(Country))      AS cname_norm,
  TRIM(Country)             AS CountryName,
  CAST(Year AS INTEGER)     AS Year,
  Pollution
FROM AirPollution_clean
WHERE TRIM(Country) <> '' AND Year IS NOT NULL;

/* =========================================================
   2) 计算 2018–2019 基线 & 2020 年值
   ========================================================= */
-- 2018–2019 平均 PM2.5
CREATE VIEW pm25_pre AS
SELECT cname_norm, AVG(Pollution) AS PrePandemic_Avg_PM25
FROM pm_norm
WHERE Year IN (2018, 2019)
GROUP BY cname_norm;

-- 2018–2019 平均 HDI
CREATE VIEW hdi_pre AS
SELECT cname_norm, AVG(HDI) AS PrePandemic_Avg_HDI
FROM hdi_norm
WHERE Year IN (2018, 2019)
GROUP BY cname_norm;

-- 2020 PM2.5（当年）
CREATE VIEW pm25_2020 AS
SELECT cname_norm, Pollution AS PM25_2020
FROM pm_norm
WHERE Year = 2020;

-- 2020 HDI（当年）
CREATE VIEW hdi_2020 AS
SELECT cname_norm, HDI AS HDI_2020
FROM hdi_norm
WHERE Year = 2020;

/* =========================================================
   3) 国家主表（用于挂地区/HDI组；优先 2020，否则 2021，再否则 2019）
   ========================================================= */
CREATE VIEW country_meta_any AS
SELECT cname_norm, CountryName, Year, Developing_Region, HDI_Group
FROM hdi_norm
WHERE Year IN (2019, 2020, 2021);

CREATE VIEW country_master AS
SELECT
  cname_norm,
  MIN(CountryName) AS CountryName,
  COALESCE(
    MAX(CASE WHEN Year=2020 THEN Developing_Region END),
    MAX(CASE WHEN Year=2021 THEN Developing_Region END),
    MAX(CASE WHEN Year=2019 THEN Developing_Region END),
    'Unknown'
  ) AS Region,
  COALESCE(
    MAX(CASE WHEN Year=2020 THEN HDI_Group END),
    MAX(CASE WHEN Year=2021 THEN HDI_Group END),
    MAX(CASE WHEN Year=2019 THEN HDI_Group END),
    'Unknown'
  ) AS HDI_Group
FROM country_meta_any
GROUP BY cname_norm;

/* =========================================================
   4) RQ1 核心结果（国家级变化 & 汇总）
   ========================================================= */
-- 国家级变化表（供所有后续图表/表格使用）
CREATE VIEW rq1_country_changes AS
SELECT
  cm.Region,
  cm.HDI_Group,
  cm.CountryName,
  pp.PrePandemic_Avg_PM25,
  p20.PM25_2020,
  (pp.PrePandemic_Avg_PM25 - p20.PM25_2020) AS PM25_Change,   -- >0 表示污染下降
  hp.PrePandemic_Avg_HDI,
  h20.HDI_2020,
  (h20.HDI_2020 - hp.PrePandemic_Avg_HDI)   AS HDI_Change     -- >0 表示 HDI 上升
FROM country_master cm
JOIN pm25_pre pp ON cm.cname_norm = pp.cname_norm
JOIN pm25_2020 p20 ON cm.cname_norm = p20.cname_norm
JOIN hdi_pre  hp  ON cm.cname_norm = hp.cname_norm
JOIN hdi_2020 h20 ON cm.cname_norm = h20.cname_norm;

-- 按地区汇总：哪个地区改善/恶化最多
CREATE VIEW rq1_region_summary AS
SELECT
  Region,
  COUNT(*) AS n_countries,
  ROUND(AVG(PM25_Change), 3) AS avg_PM25_change,  -- >0 污染总体下降
  ROUND(AVG(HDI_Change), 3)  AS avg_HDI_change    -- >0 HDI 总体上升
FROM rq1_country_changes
GROUP BY Region
ORDER BY avg_PM25_change DESC;

-- 按 HDI 组别汇总
CREATE VIEW rq1_hdigroup_summary AS
SELECT
  HDI_Group,
  COUNT(*) AS n_countries,
  ROUND(AVG(PM25_Change), 3) AS avg_PM25_change,
  ROUND(AVG(HDI_Change), 3)  AS avg_HDI_change,
  SUM(CASE WHEN PM25_Change > 0 THEN 1 ELSE 0 END) AS n_pm25_improved,
  SUM(CASE WHEN HDI_Change  >= 0 THEN 1 ELSE 0 END) AS n_hdi_nondecline
FROM rq1_country_changes
GROUP BY HDI_Group
ORDER BY avg_PM25_change DESC;

/* 便于写报告的 Top/Bottom 榜单 */
CREATE VIEW rq1_top_improve_pm25 AS
SELECT Region, CountryName, ROUND(PM25_Change,3) AS PM25_Change
FROM rq1_country_changes
ORDER BY PM25_Change DESC
LIMIT 15;

CREATE VIEW rq1_top_decline_pm25 AS
SELECT Region, CountryName, ROUND(PM25_Change,3) AS PM25_Change
FROM rq1_country_changes
ORDER BY PM25_Change ASC
LIMIT 15;

CREATE VIEW rq1_top_improve_hdi AS
SELECT Region, CountryName, ROUND(HDI_Change,3) AS HDI_Change
FROM rq1_country_changes
ORDER BY HDI_Change DESC
LIMIT 15;

CREATE VIEW rq1_top_decline_hdi AS
SELECT Region, CountryName, ROUND(HDI_Change,3) AS HDI_Change
FROM rq1_country_changes
ORDER BY HDI_Change ASC
LIMIT 15;

/* =========================================================
   5) 自检：一步步确认有没有空
   ========================================================= */
-- 原始表行数
SELECT 'AirPollution_clean', COUNT(*) FROM AirPollution_clean
UNION ALL SELECT 'HDI_clean', COUNT(*) FROM HDI_clean;

-- 关键中间视图是否有行
SELECT 'pm25_pre' , COUNT(*) FROM pm25_pre
UNION ALL SELECT 'pm25_2020', COUNT(*) FROM pm25_2020
UNION ALL SELECT 'hdi_pre'  , COUNT(*) FROM hdi_pre
UNION ALL SELECT 'hdi_2020' , COUNT(*) FROM hdi_2020
UNION ALL SELECT 'country_master', COUNT(*) FROM country_master
UNION ALL SELECT 'RQ1 country rows', COUNT(*) FROM rq1_country_changes;

-- 随机看结果
SELECT * FROM rq1_country_changes LIMIT 20;
SELECT * FROM rq1_region_summary;
SELECT * FROM rq1_hdigroup_summary;

-- 如果 RQ1 还是 0 行，看看“对不上的国家名”
-- （HDI 有 2020，但 PM2020 缺）
SELECT hn.CountryName
FROM (SELECT DISTINCT cname_norm, CountryName FROM hdi_norm WHERE Year=2020) hn
LEFT JOIN (SELECT DISTINCT cname_norm FROM pm_norm WHERE Year=2020) pn
  ON hn.cname_norm = pn.cname_norm
WHERE pn.cname_norm IS NULL
LIMIT 30;

-- （PM2020 有，但 HDI2020 缺）
SELECT pn.CountryName
FROM (SELECT DISTINCT cname_norm, CountryName FROM pm_norm WHERE Year=2020) pn
LEFT JOIN (SELECT DISTINCT cname_norm FROM hdi_norm WHERE Year=2020) hn
  ON pn.cname_norm = hn.cname_norm
WHERE hn.cname_norm IS NULL
LIMIT 30;
